{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { WindowContext } from './context';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function WindowProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const [isActiveWindow, setActiveWindow] = useState(true);\n  useEffect(() => {\n    const visibilityChangeListener = () => {\n      switch (document.visibilityState) {\n        case 'hidden':\n          setActiveWindow(false);\n          break;\n        case 'visible':\n          setActiveWindow(true);\n          break;\n      }\n    };\n    document.addEventListener('visibilitychange', visibilityChangeListener);\n    return () => document.removeEventListener('visibilitychange', visibilityChangeListener);\n  }, []);\n  return _jsx(WindowContext.Provider, {\n    value: isActiveWindow,\n    children: children\n  });\n}","map":{"version":3,"names":["useState","useEffect","WindowContext","WindowProvider","_ref","children","isActiveWindow","setActiveWindow","visibilityChangeListener","document","visibilityState","addEventListener","removeEventListener","_jsx","Provider","value"],"sources":["/Users/mcbood/Desktop/unitestask/node_modules/@usedapp/core/src/providers/window/provider.tsx"],"sourcesContent":["import { ReactNode, useState, useEffect } from 'react'\nimport { WindowContext } from './context'\n\ninterface Props {\n  children: ReactNode\n}\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function WindowProvider({ children }: Props) {\n  const [isActiveWindow, setActiveWindow] = useState(true)\n\n  useEffect(() => {\n    const visibilityChangeListener = () => {\n      switch (document.visibilityState) {\n        case 'hidden':\n          setActiveWindow(false)\n          break\n        case 'visible':\n          setActiveWindow(true)\n          break\n      }\n    }\n    document.addEventListener('visibilitychange', visibilityChangeListener)\n    return () => document.removeEventListener('visibilitychange', visibilityChangeListener)\n  }, [])\n\n  return <WindowContext.Provider value={isActiveWindow} children={children} />\n}\n"],"mappings":";AAAA,SAAoBA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtD,SAASC,aAAa,QAAQ,WAAW;AAMzC;;;AAGA,OAAM,SAAUC,cAAcA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAAEC;EAAQ,CAAS,GAAAD,IAAA;EAChD,MAAM,CAACE,cAAc,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAK;IACb,MAAMO,wBAAwB,GAAGA,CAAA,KAAK;MACpC,QAAQC,QAAQ,CAACC,eAAe;QAC9B,KAAK,QAAQ;UACXH,eAAe,CAAC,KAAK,CAAC;UACtB;QACF,KAAK,SAAS;UACZA,eAAe,CAAC,IAAI,CAAC;UACrB;MAAK;IAEX,CAAC;IACDE,QAAQ,CAACE,gBAAgB,CAAC,kBAAkB,EAAEH,wBAAwB,CAAC;IACvE,OAAO,MAAMC,QAAQ,CAACG,mBAAmB,CAAC,kBAAkB,EAAEJ,wBAAwB,CAAC;EACzF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOK,IAAA,CAACX,aAAa,CAACY,QAAQ;IAACC,KAAK,EAAET,cAAc;IAAED,QAAQ,EAAEA;EAAQ,EAAI;AAC9E"},"metadata":{},"sourceType":"module","externalDependencies":[]}