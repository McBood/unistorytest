{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport LocalStorage from '../helpers/LocalStorage';\nimport { useConfig } from './useConfig';\nfunction getItem(key, storage) {\n  const item = storage.getItem(key);\n  if (item !== null) {\n    try {\n      return JSON.parse(item);\n    } catch (_a) {\n      // ignore error\n    }\n  }\n}\nfunction setItem(key, value, storage) {\n  if (value === undefined) {\n    storage.removeItem(key);\n  } else {\n    const toStore = JSON.stringify(value);\n    try {\n      storage.setItem(key, toStore);\n      return JSON.parse(toStore);\n    } catch (err) {\n      console.error('Error in localStorage', err);\n      storage.removeItem(key);\n    }\n  }\n}\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function useLocalStorage(key) {\n  const {\n    localStorageOverride = typeof window !== 'undefined' ? window.localStorage : new LocalStorage()\n  } = useConfig();\n  const [value, setValue] = useState(() => getItem(key, localStorageOverride));\n  useEffect(() => {\n    setValue(getItem(key, localStorageOverride));\n  }, [key]);\n  useEffect(() => {\n    setItem(key, value, localStorageOverride);\n  }, [value]);\n  // As value updating relies on useEffect, it takes multiple rerenders to fully update the value.\n  // The third element in the return array allows to get the immediate value stored in the localStorage.\n  return [value, setValue, () => getItem(key, localStorageOverride)];\n}","map":{"version":3,"names":["useEffect","useState","LocalStorage","useConfig","getItem","key","storage","item","JSON","parse","_a","setItem","value","undefined","removeItem","toStore","stringify","err","console","error","useLocalStorage","localStorageOverride","window","localStorage","setValue"],"sources":["/Users/mcbood/Desktop/unitest/node_modules/@usedapp/core/src/hooks/useLocalStorage.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport LocalStorage from '../helpers/LocalStorage'\nimport { useConfig } from './useConfig'\n\nfunction getItem(key: string, storage: WindowLocalStorage['localStorage']) {\n  const item = storage.getItem(key)\n  if (item !== null) {\n    try {\n      return JSON.parse(item)\n    } catch {\n      // ignore error\n    }\n  }\n}\n\nfunction setItem(key: string, value: any, storage: WindowLocalStorage['localStorage']) {\n  if (value === undefined) {\n    storage.removeItem(key)\n  } else {\n    const toStore = JSON.stringify(value)\n    try {\n      storage.setItem(key, toStore)\n      return JSON.parse(toStore)\n    } catch (err) {\n      console.error('Error in localStorage', err)\n      storage.removeItem(key)\n    }\n  }\n}\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function useLocalStorage(key: string) {\n  const {\n    localStorageOverride = typeof window !== 'undefined' ? window.localStorage : new LocalStorage(),\n  } = useConfig()\n\n  const [value, setValue] = useState(() => getItem(key, localStorageOverride))\n\n  useEffect(() => {\n    setValue(getItem(key, localStorageOverride))\n  }, [key])\n\n  useEffect(() => {\n    setItem(key, value, localStorageOverride)\n  }, [value])\n\n  // As value updating relies on useEffect, it takes multiple rerenders to fully update the value.\n  // The third element in the return array allows to get the immediate value stored in the localStorage.\n  return [value, setValue, () => getItem(key, localStorageOverride)] as const\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,SAASC,SAAS,QAAQ,aAAa;AAEvC,SAASC,OAAOA,CAACC,GAAW,EAAEC,OAA2C;EACvE,MAAMC,IAAI,GAAGD,OAAO,CAACF,OAAO,CAACC,GAAG,CAAC;EACjC,IAAIE,IAAI,KAAK,IAAI,EAAE;IACjB,IAAI;MACF,OAAOC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;KACxB,CAAC,OAAAG,EAAA,EAAM;MACN;IAAA;;AAGN;AAEA,SAASC,OAAOA,CAACN,GAAW,EAAEO,KAAU,EAAEN,OAA2C;EACnF,IAAIM,KAAK,KAAKC,SAAS,EAAE;IACvBP,OAAO,CAACQ,UAAU,CAACT,GAAG,CAAC;GACxB,MAAM;IACL,MAAMU,OAAO,GAAGP,IAAI,CAACQ,SAAS,CAACJ,KAAK,CAAC;IACrC,IAAI;MACFN,OAAO,CAACK,OAAO,CAACN,GAAG,EAAEU,OAAO,CAAC;MAC7B,OAAOP,IAAI,CAACC,KAAK,CAACM,OAAO,CAAC;KAC3B,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3CX,OAAO,CAACQ,UAAU,CAACT,GAAG,CAAC;;;AAG7B;AAEA;;;AAGA,OAAM,SAAUe,eAAeA,CAACf,GAAW;EACzC,MAAM;IACJgB,oBAAoB,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACC,YAAY,GAAG,IAAIrB,YAAY;EAAE,CAChG,GAAGC,SAAS,EAAE;EAEf,MAAM,CAACS,KAAK,EAAEY,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,MAAMG,OAAO,CAACC,GAAG,EAAEgB,oBAAoB,CAAC,CAAC;EAE5ErB,SAAS,CAAC,MAAK;IACbwB,QAAQ,CAACpB,OAAO,CAACC,GAAG,EAAEgB,oBAAoB,CAAC,CAAC;EAC9C,CAAC,EAAE,CAAChB,GAAG,CAAC,CAAC;EAETL,SAAS,CAAC,MAAK;IACbW,OAAO,CAACN,GAAG,EAAEO,KAAK,EAAES,oBAAoB,CAAC;EAC3C,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX;EACA;EACA,OAAO,CAACA,KAAK,EAAEY,QAAQ,EAAE,MAAMpB,OAAO,CAACC,GAAG,EAAEgB,oBAAoB,CAAC,CAAU;AAC7E"},"metadata":{},"sourceType":"module","externalDependencies":[]}