{"ast":null,"code":"import { providers } from 'ethers';\nimport { Event } from '../../../../helpers/event';\nexport class InjectedConnector {\n  constructor(provider) {\n    this.name = 'Injected';\n    this.update = new Event();\n    this.provider = providers.Provider.isProvider(provider) ? provider : new providers.Web3Provider(provider);\n  }\n  async connectEagerly() {\n    if (!this.provider) {\n      return;\n    }\n    try {\n      const chainId = await this.provider.send('eth_chainId', []);\n      const accounts = await this.provider.send('eth_accounts', []);\n      this.update.emit({\n        chainId: parseInt(chainId),\n        accounts\n      });\n    } catch (error) {\n      console.debug(error);\n    }\n  }\n  async activate() {\n    if (!this.provider) {\n      throw new Error('Could not activate connector');\n    }\n    try {\n      const chainId = await this.provider.send('eth_chainId', []);\n      const accounts = await this.provider.send('eth_accounts', []);\n      this.update.emit({\n        chainId: parseInt(chainId),\n        accounts\n      });\n    } catch (error) {\n      console.log(error);\n      throw new Error('Could not activate connector');\n    }\n  }\n  async deactivate() {\n    this.provider = undefined;\n  }\n}","map":{"version":3,"names":["providers","Event","InjectedConnector","constructor","provider","name","update","Provider","isProvider","Web3Provider","connectEagerly","chainId","send","accounts","emit","parseInt","error","console","debug","activate","Error","log","deactivate","undefined"],"sources":["/Users/mcbood/Desktop/unitestask/node_modules/@usedapp/core/src/providers/network/connectors/implementations/injected.ts"],"sourcesContent":["import { providers } from 'ethers'\nimport { Connector, ConnectorUpdateData } from '../connector'\nimport { Event } from '../../../../helpers/event'\n\nexport class InjectedConnector implements Connector {\n  public provider?: providers.Web3Provider | providers.JsonRpcProvider\n  public readonly name = 'Injected'\n\n  readonly update = new Event<ConnectorUpdateData>()\n\n  constructor(provider: providers.ExternalProvider | providers.Web3Provider | providers.JsonRpcProvider) {\n    this.provider = providers.Provider.isProvider(provider) ? provider : new providers.Web3Provider(provider)\n  }\n\n  async connectEagerly(): Promise<void> {\n    if (!this.provider) {\n      return\n    }\n\n    try {\n      const chainId: string = await this.provider!.send('eth_chainId', [])\n      const accounts: string[] = await this.provider!.send('eth_accounts', [])\n      this.update.emit({ chainId: parseInt(chainId), accounts })\n    } catch (error) {\n      console.debug(error)\n    }\n  }\n\n  async activate(): Promise<void> {\n    if (!this.provider) {\n      throw new Error('Could not activate connector')\n    }\n\n    try {\n      const chainId: string = await this.provider!.send('eth_chainId', [])\n      const accounts: string[] = await this.provider!.send('eth_accounts', [])\n      this.update.emit({ chainId: parseInt(chainId), accounts })\n    } catch (error) {\n      console.log(error)\n      throw new Error('Could not activate connector')\n    }\n  }\n\n  async deactivate(): Promise<void> {\n    this.provider = undefined\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAQ;AAElC,SAASC,KAAK,QAAQ,2BAA2B;AAEjD,OAAM,MAAOC,iBAAiB;EAM5BC,YAAYC,QAAyF;IAJrF,KAAAC,IAAI,GAAG,UAAU;IAExB,KAAAC,MAAM,GAAG,IAAIL,KAAK,EAAuB;IAGhD,IAAI,CAACG,QAAQ,GAAGJ,SAAS,CAACO,QAAQ,CAACC,UAAU,CAACJ,QAAQ,CAAC,GAAGA,QAAQ,GAAG,IAAIJ,SAAS,CAACS,YAAY,CAACL,QAAQ,CAAC;EAC3G;EAEA,MAAMM,cAAcA,CAAA;IAClB,IAAI,CAAC,IAAI,CAACN,QAAQ,EAAE;MAClB;;IAGF,IAAI;MACF,MAAMO,OAAO,GAAW,MAAM,IAAI,CAACP,QAAS,CAACQ,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC;MACpE,MAAMC,QAAQ,GAAa,MAAM,IAAI,CAACT,QAAS,CAACQ,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC;MACxE,IAAI,CAACN,MAAM,CAACQ,IAAI,CAAC;QAAEH,OAAO,EAAEI,QAAQ,CAACJ,OAAO,CAAC;QAAEE;MAAQ,CAAE,CAAC;KAC3D,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACC,KAAK,CAACF,KAAK,CAAC;;EAExB;EAEA,MAAMG,QAAQA,CAAA;IACZ,IAAI,CAAC,IAAI,CAACf,QAAQ,EAAE;MAClB,MAAM,IAAIgB,KAAK,CAAC,8BAA8B,CAAC;;IAGjD,IAAI;MACF,MAAMT,OAAO,GAAW,MAAM,IAAI,CAACP,QAAS,CAACQ,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC;MACpE,MAAMC,QAAQ,GAAa,MAAM,IAAI,CAACT,QAAS,CAACQ,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC;MACxE,IAAI,CAACN,MAAM,CAACQ,IAAI,CAAC;QAAEH,OAAO,EAAEI,QAAQ,CAACJ,OAAO,CAAC;QAAEE;MAAQ,CAAE,CAAC;KAC3D,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACI,GAAG,CAACL,KAAK,CAAC;MAClB,MAAM,IAAII,KAAK,CAAC,8BAA8B,CAAC;;EAEnD;EAEA,MAAME,UAAUA,CAAA;IACd,IAAI,CAAClB,QAAQ,GAAGmB,SAAS;EAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}