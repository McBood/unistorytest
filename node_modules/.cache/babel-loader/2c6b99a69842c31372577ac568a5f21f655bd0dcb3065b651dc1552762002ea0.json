{"ast":null,"code":"import { useChainState } from './useChainState';\n/**\n * Returns an address of the multicall contract used on a given chain.\n * @public\n * @param queryParams see {@link QueryParams}.\n */\nexport function useMulticallAddress() {\n  let queryParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _a;\n  return (_a = useChainState(queryParams)) === null || _a === void 0 ? void 0 : _a.multicallAddress;\n}","map":{"version":3,"names":["useChainState","useMulticallAddress","queryParams","arguments","length","undefined","_a","multicallAddress"],"sources":["/Users/mcbood/Desktop/unitest/node_modules/@usedapp/core/src/hooks/useMulticallAddress.ts"],"sourcesContent":["import { QueryParams } from '../constants/type/QueryParams'\nimport { useChainState } from './useChainState'\n\n/**\n * Returns an address of the multicall contract used on a given chain.\n * @public\n * @param queryParams see {@link QueryParams}.\n */\nexport function useMulticallAddress(queryParams: QueryParams = {}): string | undefined {\n  return useChainState(queryParams)?.multicallAddress\n}\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,iBAAiB;AAE/C;;;;;AAKA,OAAM,SAAUC,mBAAmBA,CAAA,EAA8B;EAAA,IAA7BC,WAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA2B,EAAE;;EAC/D,OAAO,CAAAG,EAAA,GAAAN,aAAa,CAACE,WAAW,CAAC,cAAAI,EAAA,uBAAAA,EAAA,CAAEC,gBAAgB;AACrD"},"metadata":{},"sourceType":"module","externalDependencies":[]}