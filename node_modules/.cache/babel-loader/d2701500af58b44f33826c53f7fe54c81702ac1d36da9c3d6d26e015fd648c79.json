{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { useDebounce } from '../../../hooks';\nimport { useReadonlyNetworks } from '../../network';\nimport { BlockNumbersContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nimport { useWindow } from '../../window';\nimport { useIsMounted } from '../../../hooks/useIsMounted';\nexport function BlockNumbersProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const networks = useReadonlyNetworks();\n  const [state, dispatch] = useReducer(blockNumberReducer, {});\n  const isActive = useWindow();\n  const isMounted = useIsMounted();\n  useEffect(() => {\n    const onUnmount = Object.entries(networks).map(_ref2 => {\n      let [chainId, provider] = _ref2;\n      return subscribeToNewBlock(provider, Number(chainId), function () {\n        if (isMounted()) {\n          dispatch(...arguments);\n        }\n      }, isActive);\n    });\n    return () => onUnmount.forEach(fn => fn());\n  }, [networks]);\n  const debouncedState = useDebounce(state, 100);\n  return _jsx(BlockNumbersContext.Provider, {\n    value: debouncedState,\n    children: children\n  });\n}","map":{"version":3,"names":["useEffect","useReducer","useDebounce","useReadonlyNetworks","BlockNumbersContext","blockNumberReducer","subscribeToNewBlock","useWindow","useIsMounted","BlockNumbersProvider","_ref","children","networks","state","dispatch","isActive","isMounted","onUnmount","Object","entries","map","_ref2","chainId","provider","Number","arguments","forEach","fn","debouncedState","_jsx","Provider","value"],"sources":["/Users/mcbood/Desktop/unitest/node_modules/@usedapp/core/src/providers/blockNumber/blockNumbers/provider.tsx"],"sourcesContent":["import { ReactNode, useEffect, useReducer } from 'react'\nimport { useDebounce } from '../../../hooks'\nimport { useReadonlyNetworks } from '../../network'\nimport { BlockNumbersContext } from './context'\nimport { blockNumberReducer } from '../common/reducer'\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock'\nimport { useWindow } from '../../window'\nimport { useIsMounted } from '../../../hooks/useIsMounted'\n\ninterface Props {\n  children: ReactNode\n}\n\nexport function BlockNumbersProvider({ children }: Props) {\n  const networks = useReadonlyNetworks()\n  const [state, dispatch] = useReducer(blockNumberReducer, {})\n  const isActive = useWindow()\n  const isMounted = useIsMounted()\n\n  useEffect(() => {\n    const onUnmount = Object.entries(networks).map(([chainId, provider]) =>\n      subscribeToNewBlock(\n        provider,\n        Number(chainId),\n        (...args: Parameters<typeof dispatch>) => {\n          if (isMounted()) {\n            dispatch(...args)\n          }\n        },\n        isActive\n      )\n    )\n\n    return () => onUnmount.forEach((fn) => fn())\n  }, [networks])\n\n  const debouncedState = useDebounce(state, 100)\n\n  return <BlockNumbersContext.Provider value={debouncedState} children={children} />\n}\n"],"mappings":";AAAA,SAAoBA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,mBAAmB,QAAQ,eAAe;AACnD,SAASC,mBAAmB,QAAQ,WAAW;AAC/C,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,YAAY,QAAQ,6BAA6B;AAM1D,OAAM,SAAUC,oBAAoBA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAAEC;EAAQ,CAAS,GAAAD,IAAA;EACtD,MAAME,QAAQ,GAAGT,mBAAmB,EAAE;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGb,UAAU,CAACI,kBAAkB,EAAE,EAAE,CAAC;EAC5D,MAAMU,QAAQ,GAAGR,SAAS,EAAE;EAC5B,MAAMS,SAAS,GAAGR,YAAY,EAAE;EAEhCR,SAAS,CAAC,MAAK;IACb,MAAMiB,SAAS,GAAGC,MAAM,CAACC,OAAO,CAACP,QAAQ,CAAC,CAACQ,GAAG,CAACC,KAAA;MAAA,IAAC,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAAF,KAAA;MAAA,OACjEf,mBAAmB,CACjBiB,QAAQ,EACRC,MAAM,CAACF,OAAO,CAAC,EACf,YAAyC;QACvC,IAAIN,SAAS,EAAE,EAAE;UACfF,QAAQ,CAAC,GAAAW,SAAO,CAAC;;MAErB,CAAC,EACDV,QAAQ,CACT;IAAA,EACF;IAED,OAAO,MAAME,SAAS,CAACS,OAAO,CAAEC,EAAE,IAAKA,EAAE,EAAE,CAAC;EAC9C,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEd,MAAMgB,cAAc,GAAG1B,WAAW,CAACW,KAAK,EAAE,GAAG,CAAC;EAE9C,OAAOgB,IAAA,CAACzB,mBAAmB,CAAC0B,QAAQ;IAACC,KAAK,EAAEH,cAAc;IAAEjB,QAAQ,EAAEA;EAAQ,EAAI;AACpF"},"metadata":{},"sourceType":"module","externalDependencies":[]}